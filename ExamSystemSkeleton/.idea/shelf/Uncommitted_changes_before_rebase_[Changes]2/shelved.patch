Index: src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package comp3111.examsystem.controller;\r\n\r\nimport comp3111.examsystem.Database;\r\nimport comp3111.examsystem.DatabaseService;\r\nimport comp3111.examsystem.entity.Exam;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.chart.*;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.ComboBox;\r\n\r\nimport comp3111.examsystem.entity.Grade;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.net.URL;\r\nimport java.util.*;\r\n\r\npublic class StudentGradeStatisticsController implements Initializable {\r\n\r\n    @FXML\r\n    private ComboBox<String> statisticsCombox;\r\n\r\n    @FXML\r\n    private TableView<gradeStatistics> studentGradeTable;\r\n\r\n    @FXML\r\n    BarChart<String, Number> barChart;\r\n    @FXML\r\n    CategoryAxis categoryAxisBar;\r\n    @FXML\r\n    NumberAxis numberAxisBar;\r\n\r\n    @FXML\r\n    private TableColumn<Grade, String> courseColumn;\r\n    @FXML\r\n    private TableColumn<Grade, String> examColumn;\r\n    @FXML\r\n    private TableColumn<Grade, String> scoreColumn;\r\n    @FXML\r\n    private TableColumn<Grade, String> fullScoreColumn;\r\n    @FXML\r\n    private TableColumn<Grade, String> timeSpendColumn;\r\n\r\n    private URL location;\r\n    private ResourceBundle resources;\r\n\r\n    private String studentId = StudentLoginController.SessionManager.getLoggedInStudentId().toString();\r\n    private Database<Grade> gradeDatabase = DatabaseService.getGradeDatabase();\r\n    private List<Grade> gradesReceived = gradeDatabase.queryAllOfKey(studentId, \"studentId\");\r\n    private Database<Exam> examDatabase = DatabaseService.getExamDatabase();\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        this.location = location;\r\n        this.resources = resources;\r\n\r\n        //Display initial screen\r\n        setUpTable();\r\n        makeColumnsEqualWidth();\r\n        setStatisticsCombox();\r\n\r\n        //Set up bar chart\r\n        barChart.setLegendVisible(false);\r\n        categoryAxisBar.setLabel(\"Exam\");\r\n        numberAxisBar.setLabel(\"Percentage Score\");\r\n\r\n        setBarChart(\"none\",true);\r\n\r\n    }\r\n\r\n    /**\r\n     * Class gradeStatistics to store data to be displayed on the bar chart\r\n     */\r\n    public static class gradeStatistics {\r\n        private String courseId;\r\n        private String examName;\r\n        private String score;\r\n        private String fullScore;\r\n        private String timeSpent;\r\n\r\n        public gradeStatistics(String courseId, String examName, String score, String fullScore, String timeSpent) {\r\n            this.courseId = courseId;\r\n            this.examName = examName;\r\n            this.score = score;\r\n            this.fullScore = fullScore;\r\n            this.timeSpent = timeSpent;\r\n        }\r\n        public String getCourseId() { return courseId; }\r\n        public String getExamName() { return examName; }\r\n        public String getScore() { return score; }\r\n        public String getFullScore() { return fullScore; }\r\n        public String getTimeSpent() { return timeSpent; }\r\n        public void setCourseId(String courseId) { this.courseId = courseId; }\r\n        public void setExamName(String examId) { this.examName = examName; }\r\n        public void setScore(String score) { this.score = score; }\r\n        public void setFullScore(String fullScore) { this.fullScore = fullScore; }\r\n        public void setTimeSpent(String timeSpent) { this.timeSpent = timeSpent; }\r\n    }\r\n\r\n    /**\r\n     * Function setUpTable() sets up the table view of the list of exams taken by student\r\n     */\r\n    public void setUpTable() {\r\n        //Initialize the columns for the tableview\r\n        courseColumn.setCellValueFactory(new PropertyValueFactory<>(\"courseId\"));\r\n        examColumn.setCellValueFactory(new PropertyValueFactory<>(\"examName\"));\r\n        scoreColumn.setCellValueFactory(new PropertyValueFactory<>(\"score\"));\r\n        fullScoreColumn.setCellValueFactory(new PropertyValueFactory<>(\"fullScore\"));\r\n        timeSpendColumn.setCellValueFactory(new PropertyValueFactory<>(\"timeSpent\"));\r\n\r\n        //Fill in the values into the table\r\n        ObservableList<gradeStatistics> gradeStatisticsList = FXCollections.observableArrayList();\r\n\r\n        //For each grade\r\n        for (Grade grade : gradesReceived) {\r\n            //Find the examId\r\n            String examId = grade.getExamId();\r\n            //Use it to find the courseId\r\n            Exam exam = examDatabase.queryByKey(examId);\r\n            String courseId = exam.getCourseNum();\r\n\r\n            //Get the exam name\r\n            String examName = exam.getExamName();\r\n\r\n            String score = grade.getScore();\r\n            String fullScore = grade.getFullScore();\r\n            String timeSpend = grade.getTimeSpend();\r\n\r\n            // Add data to the table\r\n            gradeStatisticsList.add(new gradeStatistics(courseId, examName, score, fullScore, timeSpend));\r\n        }\r\n\r\n        studentGradeTable.setItems(gradeStatisticsList);\r\n    }\r\n\r\n    /**\r\n     * Function makeColumnsEqualWidth() is to make the columns in tableview to be equalwidth\r\n     */\r\n    private void makeColumnsEqualWidth() {\r\n        studentGradeTable.widthProperty().addListener((obs, oldWidth, newWidth) -> {\r\n            double tableWidth = newWidth.doubleValue();\r\n            double columnWidth = tableWidth / studentGradeTable.getColumns().size();\r\n            for (TableColumn<?, ?> column : studentGradeTable.getColumns()) {\r\n                column.setPrefWidth(columnWidth);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function setStatisticsCombox sets up the combobox for the filter\r\n     */\r\n    public void setStatisticsCombox() {\r\n        if (statisticsCombox == null) {\r\n            return;\r\n        }\r\n        //Reset combobox\r\n        statisticsCombox.getSelectionModel().clearSelection();\r\n        //Set up the course list\r\n        int gradesSize = gradesReceived.size();\r\n        for (int i = 0; i < gradesSize; i++) {\r\n            //Find the examId\r\n            String examId = gradesReceived.get(i).getExamId();\r\n            //Use it to find the courseId\r\n            Exam exam = examDatabase.queryByKey(examId);\r\n            if (!statisticsCombox.getItems().contains(exam.getCourseNum())) {\r\n                statisticsCombox.getItems().addAll(exam.getCourseNum());\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function setBarChart(courseName, firstTime) sets up the bar chart based on the item selected in combobox\r\n     * @param courseName is the name of course selected in combobox\r\n     * @param firstTime is a boolean to check if this is the first time this function is called\r\n     */\r\n    public void setBarChart(String courseName, boolean firstTime) {\r\n\r\n        // Clear existing data from the charts\r\n        barChart.getData().clear();\r\n\r\n        if (courseName == \"none\") {\r\n            return;\r\n        }\r\n\r\n        // Bar Chart -> scores for each exam\r\n\r\n        //Get input from comboBox\r\n        String statsToShow = courseName;\r\n\r\n        //For each grade in the database, check if it is from the selected course\r\n        if (statsToShow == null && firstTime == false) {\r\n            showAlert(\"Notice\", \"Please select an exam to display.\");\r\n            return;\r\n        }\r\n        else if (firstTime == true) {\r\n            return;\r\n        }\r\n\r\n        XYChart.Series<String, Number> seriesBar = new XYChart.Series<>();\r\n\r\n        for (Grade grade : gradesReceived) {\r\n            String course = grade.getCourseNum();\r\n            if (statsToShow.equals(course)) {\r\n                //Then, get its exam names, scores, total scores\r\n                String examName = grade.getExamName();\r\n                double score = Double.parseDouble(grade.getScore());\r\n                double totalScore = Double.parseDouble(grade.getFullScore());\r\n                String scoreString = grade.getScore();\r\n                Double percentageScore = (100 * score) / totalScore;\r\n\r\n                seriesBar.getData().add(new XYChart.Data<>(examName, percentageScore));\r\n\r\n            }\r\n        }\r\n\r\n        barChart.getData().add(seriesBar);\r\n\r\n        CategoryAxis xAxis = (CategoryAxis) barChart.getXAxis();\r\n        xAxis.setTickLabelRotation(0); // Ensure labels are not rotated\r\n        xAxis.setTickLabelGap(10); // Adjust gap if needed\r\n        xAxis.setStyle(\"-fx-alignment: center;\"); // Center align labels\r\n\r\n        // Force layout pass to center the labels\r\n        Platform.runLater(() -> {\r\n            barChart.applyCss();\r\n            barChart.layout();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function showAlert(title, text, onHidden) to show alert to user.\r\n     * @param title is the title of the alert\r\n     * @param text is the main message of the alert\r\n     */\r\n    private void showAlert(String title, String text) {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n        alert.setTitle(title);\r\n        alert.setHeaderText(text);\r\n        alert.showAndWait();\r\n    }\r\n\r\n    /**\r\n     * Function closeStatisticsUI() closes the interface\r\n     */\r\n    public void closeStatisticsUI() {\r\n        Stage stage = (Stage) statisticsCombox.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n    /**\r\n     * Function reset() resets the combobox and the bar chart accordingly.\r\n     */\r\n    public void reset() {\r\n        setStatisticsCombox();\r\n        setBarChart(\"none\",true);\r\n    }\r\n\r\n    /**\r\n     * Function filter() filters the exams that belong to the course selected in the combobox, then displays\r\n     * the data on the bar chart.\r\n     */\r\n    public void filter() {\r\n        String courseName = statisticsCombox.getSelectionModel().getSelectedItem();\r\n        setBarChart(courseName,false);\r\n    }\r\n\r\n    /**\r\n     * Function refresh() resets the entire page by calling the initializer again.\r\n     */\r\n    public void refresh(){\r\n        initialize(location, resources);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java b/src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java
--- a/src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java	(date 1732342773010)
@@ -2,13 +2,16 @@
 
 import comp3111.examsystem.Database;
 import comp3111.examsystem.DatabaseService;
+import comp3111.examsystem.Main;
 import comp3111.examsystem.entity.Exam;
 import javafx.animation.PauseTransition;
 import javafx.application.Platform;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
 import javafx.fxml.Initializable;
+import javafx.scene.Scene;
 import javafx.scene.chart.*;
 import javafx.scene.control.Alert;
 import javafx.scene.control.ComboBox;
@@ -20,6 +23,7 @@
 import javafx.stage.Stage;
 import javafx.util.Duration;
 
+import java.io.IOException;
 import java.net.URL;
 import java.util.*;
 
@@ -57,10 +61,18 @@
     private List<Grade> gradesReceived = gradeDatabase.queryAllOfKey(studentId, "studentId");
     private Database<Exam> examDatabase = DatabaseService.getExamDatabase();
 
+    /**
+     * Initializes the controller class with the provided location and resources.
+     *
+     * @param location the location used to resolve relative paths for the root object, or null if the location is not known.
+     * @param resources the resources used to localize the root object, or null if the root object was not localized.
+     * This method performs the following tasks:
+     * - Displays the initial screen by setting up the table, making columns equal width, and setting the statistics combo box.
+     * - Configures the bar chart by hiding the legend and setting labels for the category and number axes.
+     * - Initializes the bar chart with default settings.
+     */
     @Override
     public void initialize(URL location, ResourceBundle resources) {
-        this.location = location;
-        this.resources = resources;
 
         //Display initial screen
         setUpTable();
@@ -109,6 +121,10 @@
      * Function setUpTable() sets up the table view of the list of exams taken by student
      */
     public void setUpTable() {
+
+        //clear table
+        studentGradeTable.getItems().clear();
+
         //Initialize the columns for the tableview
         courseColumn.setCellValueFactory(new PropertyValueFactory<>("courseId"));
         examColumn.setCellValueFactory(new PropertyValueFactory<>("examName"));
@@ -276,6 +292,15 @@
      * Function refresh() resets the entire page by calling the initializer again.
      */
     public void refresh(){
-        initialize(location, resources);
+        closeStatisticsUI();
+        try {
+            FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource("StudentGradeStatisticsUI.fxml"));
+            Stage stage = new Stage();
+            stage.setTitle("Grade Statistics");
+            stage.setScene(new Scene(fxmlLoader.load()));
+            stage.show();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
     }
 }
Index: src/main/java/comp3111/examsystem/controller/StudentExamController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package comp3111.examsystem.controller;\r\n\r\nimport comp3111.examsystem.Database;\r\nimport comp3111.examsystem.DatabaseService;\r\nimport comp3111.examsystem.controller.StudentMainController;\r\nimport comp3111.examsystem.entity.Exam;\r\nimport comp3111.examsystem.entity.Grade;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.application.Platform;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport comp3111.examsystem.entity.Question;\r\n\r\nimport java.net.URL;\r\nimport java.time.LocalTime;\r\nimport java.util.*;\r\n\r\nimport comp3111.examsystem.entity.Record;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\nimport javafx.scene.layout.VBox;\r\n\r\nimport java.time.format.DateTimeFormatter;\r\n\r\npublic class StudentExamController implements Initializable {\r\n\r\n    @FXML\r\n    private ListView<String> questionsList;\r\n\r\n    @FXML\r\n    private Label examName;\r\n\r\n    @FXML\r\n    private Label numberOfQuestionsLabel;\r\n\r\n    @FXML\r\n    private Label timeLimitLabel;\r\n\r\n    @FXML\r\n    private Label questionNumberLabel;\r\n\r\n    @FXML\r\n    private TextArea QuestionDetailsTextArea;\r\n\r\n    @FXML\r\n    private VBox optionsBox;\r\n\r\n    private LocalTime timeRemaining;\r\n    private Timeline timeline;\r\n    private int questionNumber;\r\n    private String[] answers = null;\r\n    private ToggleGroup answerSelection = new ToggleGroup();\r\n    private Map<RadioButton, String> radioButtonLabelMap = new HashMap<>();\r\n    private Map<CheckBox, String> checkBoxLabelMap = new HashMap<>();\r\n    private int submitCounter = 0;\r\n    private Exam exam = StudentMainController.ExamAndQuestionData.getExam();\r\n    private List<Question> questions = StudentMainController.ExamAndQuestionData.getQuestions();\r\n    private String selectedExamName = StudentMainController.ExamAndQuestionData.getSelectedExamName();\r\n    private int examSize = questions.size();\r\n\r\n    @FXML\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n\r\n        //Get the exam information from StudentMainController\r\n        answers = new String[examSize];\r\n\r\n        //Set up the question list on the side\r\n        for (Question question : questions) {\r\n            questionsList.getItems().add(question.getQuestion());\r\n        }\r\n        examName.setText(selectedExamName);\r\n\r\n        //Add listeners to the question list\r\n        questionsList.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {\r\n            // Display the content of the selected item in the TextArea\r\n            if (newValue != null) {\r\n                //Find the question number of the listview\r\n                questionNumber = questionsList.getSelectionModel().getSelectedIndex();\r\n                //Clear the current answer choices\r\n                optionsBox.getChildren().clear();\r\n                //Load the question\r\n                LoadQuestion(questionNumber);\r\n            }\r\n        });\r\n\r\n        //Get number of questions\r\n        String numberOfQuestions = Integer.toString(examSize);\r\n        numberOfQuestionsLabel.setText(\"Number of Questions: \" + numberOfQuestions);\r\n\r\n        //Set up the time limit of the exam\r\n        //Get the examTime\r\n        String strExamTime = exam.getExamTime();\r\n        int examTime = Integer.parseInt(strExamTime);\r\n        int hours = examTime / 60;\r\n        int minutes = examTime % 60;\r\n\r\n        timeRemaining = LocalTime.of(hours,minutes,0);\r\n        updateLabel();\r\n        timeline = new Timeline(new KeyFrame(Duration.seconds(1), event -> {\r\n            timeRemaining = timeRemaining.minusSeconds(1);\r\n            updateLabel();\r\n            if (timeRemaining.equals(LocalTime.of(0, 0, 0))) {\r\n                timeline.stop();\r\n                stopExam();\r\n            }\r\n        }));\r\n        timeline.setCycleCount(Timeline.INDEFINITE);\r\n        timeline.play();\r\n\r\n        //Display the initial question\r\n        LoadQuestion(0);\r\n\r\n        //Do not allow tab to be closed\r\n        Platform.runLater(this::cannotCloseStage);\r\n    }\r\n\r\n    /**\r\n     * Function updateLabel() to update the time label. This is to correctly show the time remaining in the format of\r\n     * hh:mm:ss\r\n     */\r\n    public void updateLabel() {\r\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\");\r\n        timeLimitLabel.setText(\"Time remaining: \" + timeRemaining.format(formatter));\r\n    }\r\n\r\n    /**\r\n     * Function stopExam() to stop exam when time is up.\r\n     * Alert the user that the time is up, then submit the answers for questions that have been\r\n     * completed, then close the exam UI.\r\n     */\r\n    public void stopExam() {\r\n        showAlert(\"Notice\", \"Exam time is up!\", () -> {submit(true);});\r\n        closeExamUI();\r\n    }\r\n\r\n    /**\r\n     * Function showAlert(title, text, onHidden) to show alert to user.\r\n     * @param title is the title of the alert\r\n     * @param text is the main message of the alert\r\n     * @param onHidden is the function to run when alert is closed. If null, then simply show alert.\r\n     */\r\n    private void showAlert(String title, String text, Runnable onHidden) {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n        alert.setTitle(title);\r\n        alert.setHeaderText(text);\r\n        alert.setOnHidden(event -> {\r\n            if (onHidden != null) {\r\n                onHidden.run();\r\n            }\r\n        });\r\n        Platform.runLater(() -> alert.showAndWait());\r\n\r\n    }\r\n\r\n    /**\r\n     * Function nextQuestion() to handle displaying the next question in the question list.\r\n     */\r\n    public void nextQuestion() {\r\n        SaveAnswer(questionNumber);\r\n\r\n\r\n        if ((questionNumber+1) < questionsList.getItems().size()) {\r\n            questionNumber++;\r\n            optionsBox.getChildren().clear();\r\n            LoadQuestion(questionNumber);\r\n        }\r\n        else {\r\n            showAlert(\"Notice\", \"There are no more questions. Please press submit if you have completed the exam.\", null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function LoadQuestion(questionNumber) to load a specific question at index questionNumber\r\n     * @param questionNumber is an index in the questionList. It represents the location of the question to be displayed.\r\n     */\r\n    public void LoadQuestion(int questionNumber) {\r\n        questionNumberLabel.setText(\"Question \" + (questionNumber+1));\r\n        QuestionDetailsTextArea.setText(questions.get(questionNumber).getQuestion());\r\n        radioButtonLabelMap.clear();\r\n        checkBoxLabelMap.clear();\r\n\r\n        //Set up the answer choices\r\n        String[] options = new String[4];\r\n        options[0] = questions.get(questionNumber).getOptionA();\r\n        options[1] = questions.get(questionNumber).getOptionB();\r\n        options[2] = questions.get(questionNumber).getOptionC();\r\n        options[3] = questions.get(questionNumber).getOptionD();\r\n        String[] choices = new String[4];\r\n        choices[0] = \"A\";\r\n        choices[1] = \"B\";\r\n        choices[2] = \"C\";\r\n        choices[3] = \"D\";\r\n        String questionType = questions.get(questionNumber).getType();\r\n        if (questionType.equals(\"Single\")) {\r\n            for (int i = 0; i < 4; i++) {\r\n                Label AnswerChoiceLabel = new Label();\r\n                AnswerChoiceLabel.setText(choices[i]);\r\n                RadioButton radioButton = new RadioButton(options[i]);\r\n                radioButton.setToggleGroup(answerSelection);\r\n                radioButtonLabelMap.put(radioButton, choices[i]);\r\n\r\n                HBox hbox = new HBox();\r\n                hbox.setSpacing(10);\r\n                hbox.getChildren().addAll(AnswerChoiceLabel, radioButton);\r\n                optionsBox.getChildren().add(hbox);\r\n                if (answers[questionNumber] != null && answers[questionNumber].equals(choices[i])) {\r\n                    radioButton.setSelected(true);\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n            for (int i = 0; i < 4; i++) {\r\n                Label AnswerChoiceLabel = new Label();\r\n                AnswerChoiceLabel.setText(choices[i]);\r\n                CheckBox checkBox = new CheckBox(options[i]);\r\n                checkBoxLabelMap.put(checkBox, choices[i]);\r\n\r\n                HBox hbox = new HBox();\r\n                hbox.setSpacing(10);\r\n                hbox.getChildren().addAll(AnswerChoiceLabel, checkBox);\r\n                optionsBox.getChildren().add(hbox);\r\n\r\n                if (answers[questionNumber] != null) {\r\n                    for (char savedChoice : answers[questionNumber].toCharArray()) {\r\n                        if (String.valueOf(savedChoice).equals(choices[i])) {\r\n                            checkBox.setSelected(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function SaveAnswer(questionNumber) adds the answer of the student into an internal array\r\n     * @param questionNumber is the index of the current question\r\n     */\r\n    public void SaveAnswer(int questionNumber){\r\n        String choice = null;\r\n        List<String> selectedChoices = new ArrayList<>();\r\n        String questionType = questions.get(questionNumber).getType();\r\n        if (questionType.equals(\"Single\")) {\r\n            RadioButton selectedRadioButton = (RadioButton) answerSelection.getSelectedToggle();\r\n            if (answerSelection.getSelectedToggle() == null) {\r\n                choice = null;\r\n            }\r\n            else {\r\n                choice = radioButtonLabelMap.get(selectedRadioButton);\r\n            }\r\n        }\r\n        else {\r\n            //Handle checkboxes\r\n            boolean noneSelected = true;\r\n            for (CheckBox checkBox : checkBoxLabelMap.keySet()) {\r\n                if (checkBox.isSelected()) {\r\n                    noneSelected = false;\r\n                    selectedChoices.add(checkBoxLabelMap.get(checkBox));\r\n                }\r\n            }\r\n            if (noneSelected) {\r\n                choice = null;\r\n            }\r\n            else {\r\n                Collections.sort(selectedChoices);\r\n                StringBuilder choices = new StringBuilder();\r\n                for (String selectedChoice : selectedChoices) {\r\n                    choices.append(selectedChoice);\r\n                }\r\n                choice = choices.toString();\r\n            }\r\n        }\r\n        answers[questionNumber] = choice;\r\n    }\r\n\r\n    /**\r\n     * Function submit(timeUp) is a function to submit the answer array. It gives alerts to the user if they really\r\n     * want to submit the exam, and it also sends the user back to the exam if there are questions left unanswered.\r\n     * @param timeUp checks if the submit function is passed due to time limit reached. If true, then the function\r\n     *               will skip the checks and submit the answer immediately.\r\n     */\r\n    public void submit(boolean timeUp){\r\n        SaveAnswer(questionNumber);\r\n        if (timeUp) {\r\n            //Immediately move on to the next interface\r\n            checkAnswers(answers);\r\n        }\r\n        else {\r\n            boolean missingAnswer = false;\r\n            for (int i = 0; i < questionsList.getItems().size(); i++) {\r\n                if (answers[i] == null) {\r\n                    missingAnswer = true;\r\n                }\r\n            }\r\n            //Check if any questions are unanswered\r\n            if (missingAnswer) {\r\n                showAlert(\"Notice\", \"One or more answers are missing. Please check again.\", null);\r\n                return;\r\n            }\r\n            //Second chance of submission in case of accident\r\n            if (submitCounter == 0) {\r\n                showAlert(\"Warning\", \"Are you sure you want to submit the exam? Press submit again if you would like to submit the exam.\", null);\r\n                submitCounter++;\r\n            }\r\n            //Final submit\r\n            else if (submitCounter == 1) {\r\n                showAlert(\"Notice\", \"Your answers will now be submitted.\", () -> {\r\n                    checkAnswers(answers);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function handleSubmit() is a function to be called when the submit button is pressed. The function calls\r\n     * submit(timeUp) function.\r\n     */\r\n    public void handleSubmit() {\r\n        submit(false);\r\n    }\r\n\r\n    /**\r\n     * Class uploadScore() stores the student's score and the total score available.\r\n     */\r\n    public class uploadScore {\r\n        private static String score;\r\n        private static String totalScore;\r\n        public String getScore() { return score; }\r\n        public static void setScore(String score) { uploadScore.score = score; }\r\n        public String getTotalScore() { return totalScore; }\r\n        public static void setTotalScore(String totalScore) { uploadScore.totalScore = totalScore; }\r\n    }\r\n\r\n    /**\r\n     * Function checkAnswers(studentAnswer) compares the student's answer array with the answers stored in the database.\r\n     * @param studentAnswer is the array of the student's answers for the exam that is to be marked.\r\n     */\r\n    public void checkAnswers(String[] studentAnswer) {\r\n        String[] correctAnswers = new String[examSize];\r\n        int totalScore = 0;\r\n        int score = 0;\r\n        int correctNumber = 0;\r\n        for (int i = 0; i < examSize; i++) {\r\n\r\n            correctAnswers[i] = questions.get(i).getAnswer();\r\n            totalScore += Integer.parseInt(questions.get(i).getScore());\r\n\r\n            if (studentAnswer[i] == null) {\r\n                continue;\r\n            }\r\n\r\n            if (studentAnswer[i].equals(correctAnswers[i])) {\r\n                score = score + Integer.parseInt(questions.get(i).getScore());\r\n                correctNumber++;\r\n            }\r\n        }\r\n        int finalScore = score;\r\n        int finalTotalScore = totalScore;\r\n        int finalCorrect = correctNumber;\r\n        showAlert(\"Notice\", correctNumber + \"/\" + examSize + \" correct. Your score is \" + finalScore + \"/\" + finalTotalScore + \".\", ()->{\r\n            uploadScore.setScore(Integer.toString(finalScore));\r\n            uploadScore.setTotalScore(Integer.toString(finalTotalScore));\r\n            Grade grade = new Grade();\r\n            grade.setExamId(exam.getId().toString());\r\n            grade.setStudentId(StudentLoginController.SessionManager.getLoggedInStudentId().toString());\r\n            grade.setScore(Integer.toString(finalScore));\r\n            grade.setFullScore(Integer.toString(finalTotalScore));\r\n\r\n            String strExamTime = exam.getExamTime();\r\n            //Calculate total number of seconds of exam\r\n            int examTime = Integer.parseInt(strExamTime) * 60;\r\n            //Compare with total number of seconds remaining\r\n            int secondsSpend = examTime - timeRemaining.toSecondOfDay();\r\n\r\n            grade.setTimeSpent(Integer.toString(secondsSpend / 60));\r\n            DatabaseService.getGradeDatabase().add(grade);\r\n            closeExamUI();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function closeExamUI() to close the exam interface.\r\n     */\r\n    public void closeExamUI() {\r\n        Stage stage = (Stage) questionsList.getScene().getWindow();\r\n        stage.close();\r\n        timeline.stop();\r\n    }\r\n\r\n    /**\r\n     * Function cannotCloseStage() to prevent the student from exiting the exam interface by clicking 'X'. This\r\n     * prevents the student from leaving the exam without submission.\r\n     */\r\n    public void cannotCloseStage() {\r\n        Stage stage = (Stage) questionsList.getScene().getWindow();\r\n        stage.setOnCloseRequest(event->{\r\n            event.consume();\r\n            showAlert(\"Notice\", \"You are not allowed to close the exam. Please press submit if you have completed.\", null);\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/comp3111/examsystem/controller/StudentExamController.java b/src/main/java/comp3111/examsystem/controller/StudentExamController.java
--- a/src/main/java/comp3111/examsystem/controller/StudentExamController.java	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/src/main/java/comp3111/examsystem/controller/StudentExamController.java	(date 1732342773000)
@@ -63,6 +63,21 @@
     private String selectedExamName = StudentMainController.ExamAndQuestionData.getSelectedExamName();
     private int examSize = questions.size();
 
+    /**
+     * Initializes the exam interface with the provided URL and resource bundle.
+     *
+     * @param url the location used to resolve relative paths for the root object, or null if the location is not known.
+     * @param resourceBundle the resources used to localize the root object, or null if the root object was not localized.
+     * This method performs the following tasks:
+     *  - Initializes the answers array based on the exam size.
+     *  - Populates the question list view with questions.
+     *  - Sets the exam name label.
+     *  - Adds a listener to the question list view to display the selected question.
+     *  - Displays the number of questions.
+     *  - Sets up the exam time limit and starts the countdown timer.
+     *  - Displays the initial question.
+     *  - Prevents the exam tab from being closed.
+     */
     @FXML
     public void initialize(URL url, ResourceBundle resourceBundle) {
 
Index: src/main/java/comp3111/examsystem/controller/StudentMainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package comp3111.examsystem.controller;\r\nimport comp3111.examsystem.Database;\r\nimport comp3111.examsystem.entity.*;\r\n\r\nimport comp3111.examsystem.DatabaseService;\r\nimport comp3111.examsystem.Main;\r\n\r\nimport comp3111.examsystem.entity.Record;\r\nimport javafx.event.Event;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.stream.Collectors;\r\n\r\nimport java.net.URL;\r\nimport java.util.List;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class StudentMainController implements Initializable {\r\n    @FXML\r\n    ComboBox<String> examCombox;\r\n\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n\r\n        //examCombox null check\r\n        if (examCombox == null) {\r\n            return;\r\n        }\r\n\r\n        //Get id of student\r\n        Long currentStudentId = StudentLoginController.SessionManager.getLoggedInStudentId();\r\n\r\n        //Find all courses that share the student id in CourseRegRecord\r\n        Database<CourseRegRecord> courseRegRecordDatabase = DatabaseService.getCourseRegRecordDatabase();\r\n        List<CourseRegRecord> enrolledCourses = courseRegRecordDatabase.queryAllOfKey(Long.toString(currentStudentId), \"studentKey\");\r\n        Database<Grade> gradeDatabase = DatabaseService.getGradeDatabase();\r\n\r\n        //Find all exams in the selected courses\r\n        List<Exam> examDatabase = DatabaseService.getExamDatabase().getAll();\r\n        for (Exam Exams : examDatabase) {\r\n            for (CourseRegRecord CourseRegRecord : enrolledCourses) {\r\n                //Check if student needs to take exam\r\n                if (Exams.getCourseKey().equals(CourseRegRecord.getCourseKey())) {\r\n                    //Check if there is any record of score on the exam. If not, display it.\r\n                    if (gradeDatabase.queryByTwoFields(Exams.getId().toString(), \"examId\", currentStudentId.toString(), \"studentId\") == null) {\r\n                        //Check if the exam has been published\r\n                        if (Exams.getPublish().equals(\"yes\")) {\r\n                            examCombox.getItems().addAll(CourseRegRecord.getCourseName() + \" - \" + Exams.getExamName());\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Class ExamAndQuestionData to store the details of the selected exam.\r\n     */\r\n    public class ExamAndQuestionData {\r\n        private static Exam exam;\r\n        private static List<Question> questions;\r\n        private static String SelectedExamName;\r\n        public static Exam getExam() {\r\n            return exam;\r\n        }\r\n        public static void setExam(Exam exam) {\r\n            ExamAndQuestionData.exam = exam;\r\n        }\r\n\r\n        public static List<Question> getQuestions() {\r\n            return questions;\r\n        }\r\n\r\n        public static void setQuestions(List<Question> questions) {\r\n            ExamAndQuestionData.questions = questions;\r\n        }\r\n\r\n        public static String getSelectedExamName() {\r\n            return SelectedExamName;\r\n        }\r\n\r\n        public static void setSelectedExamName(String selectedExamName) {\r\n            ExamAndQuestionData.SelectedExamName = selectedExamName;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function openExamUI() to open the exam interface to allow student to take the exam they have selected\r\n     * in the combobox.\r\n     */\r\n    @FXML\r\n    public void openExamUI() {\r\n        //Get the string 'courseName - examName' from the combox\r\n        String selectedExamName = examCombox.getSelectionModel().getSelectedItem();\r\n        ExamAndQuestionData.setSelectedExamName(selectedExamName);\r\n        if (selectedExamName == null) return;\r\n\r\n        //Remove item from combox\r\n        examCombox.getItems().remove(selectedExamName);\r\n\r\n        //Split the string into courseName and examName\r\n        String divider = \" - \";\r\n        int index = selectedExamName.indexOf(divider);\r\n        String courseName = null;\r\n        String examName = null;\r\n        if (index != -1) {\r\n            courseName = selectedExamName.substring(0, index);\r\n            examName = selectedExamName.substring(index + divider.length());\r\n        }\r\n\r\n        //Find the questions in the exam\r\n\r\n        //Get the courseID based on the courseName\r\n        Database<Course> courseDatabase = DatabaseService.getCourseDatabase();\r\n        Course course = courseDatabase.queryByName(courseName, \"courseId\");\r\n        String courseKey = course.getCourseKey().toString();\r\n\r\n        //Get the names of exams to be displayed\r\n        Database<Exam> examsDatabase = DatabaseService.getExamDatabase();\r\n        Exam examToShow = examsDatabase.queryByTwoFields(examName, \"examName\", courseKey, \"courseKey\");\r\n\r\n        if (examToShow == null) {\r\n            examToShow = examsDatabase.queryByName(examName, \"examName\");\r\n        }\r\n\r\n        //Get the records of questions to be displayed\r\n        Database<Record> recordDatabase = DatabaseService.getRecordDatabase();\r\n        List<Record> recordOfQuestionsToShow = recordDatabase.queryAllOfKey(Long.toString(examToShow.getId()), \"examKey\");\r\n\r\n        //Get the questions\r\n        List<Question> questionsToShow = new ArrayList<>();\r\n        for (Record record : recordOfQuestionsToShow) {\r\n            questionsToShow.add(record.getQuestion());\r\n        }\r\n\r\n        ExamAndQuestionData.setExam(examToShow);\r\n        ExamAndQuestionData.setQuestions(questionsToShow);\r\n\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource(\"StudentExamUI.fxml\"));\r\n            Stage stage = new Stage();\r\n            stage.setTitle(\"Start Exam\");\r\n            stage.setScene(new Scene(fxmlLoader.load()));\r\n            stage.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function openGradeStatistics() to open the student grade statistics interface\r\n     */\r\n    @FXML\r\n    public void openGradeStatistic() {\r\n        Database<Grade> gradeDatabase = DatabaseService.getGradeDatabase();\r\n        Long currentStudentId = StudentLoginController.SessionManager.getLoggedInStudentId();\r\n        List<Grade> grades = gradeDatabase.queryAllOfKey(currentStudentId.toString(), \"studentId\");\r\n        if (grades.size() == 0) {\r\n            showAlert(\"Warning\", \"There are no statistics to show.\");\r\n            return;\r\n        }\r\n        try {\r\n            FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource(\"StudentGradeStatisticsUI.fxml\"));\r\n            Stage stage = new Stage();\r\n            stage.setTitle(\"Grade Statistics\");\r\n            stage.setScene(new Scene(fxmlLoader.load()));\r\n            stage.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function exit() to exit interface.\r\n     */\r\n    @FXML\r\n    public void exit() {\r\n        System.exit(0);\r\n    }\r\n\r\n    private void showAlert(String title, String text) {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n        alert.setTitle(title);\r\n        alert.setHeaderText(text);\r\n        alert.showAndWait();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/comp3111/examsystem/controller/StudentMainController.java b/src/main/java/comp3111/examsystem/controller/StudentMainController.java
--- a/src/main/java/comp3111/examsystem/controller/StudentMainController.java	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/src/main/java/comp3111/examsystem/controller/StudentMainController.java	(date 1732342841115)
@@ -28,6 +28,23 @@
     @FXML
     ComboBox<String> examCombox;
 
+    /**
+     * Initializes the controller class with the provided location and resources.
+     *
+     * @param location the location used to resolve relative paths for the root object, or null if the location is not known.
+     * @param resources the resources used to localize the root object, or null if the root object was not localized.
+     * This method performs the following tasks:
+     * - Checks if the exam combo box is null and returns if it is.
+     * - Retrieves the ID of the currently logged-in student.
+     * - Finds all courses that the student is enrolled in from the course registration records.
+     * - Retrieves the grade database.
+     * - Finds all exams in the selected courses.
+     * - For each exam, checks if the student needs to take the exam by verifying:
+     *   - If the exam is associated with any of the student's enrolled courses.
+     *   - If there is no existing record of the student's score for the exam.
+     *   - If the exam has been published.
+     * - Adds the exam to the exam combo box if all conditions are met.
+     */
     public void initialize(URL location, ResourceBundle resources) {
 
         //examCombox null check
Index: target/classes/database/grade.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>studentId:1730897297061,examId:1730804311727,score:88,fullScore:100,timeSpend:150,id:1731342505202,\r\nstudentId:1730897297061,examId:1730804311728,score:90,fullScore:100,timeSpend:170,id:1731342505203,\r\nstudentId:1730897326628,examId:1730804311727,score:92,fullScore:100,timeSpend:160,id:1731342505204,\r\nstudentId:1730897326628,examId:1730804311728,score:95,fullScore:100,timeSpend:180,id:1731342505205,\r\nstudentId:1730898187668,examId:1730804311727,score:85,fullScore:100,timeSpend:140,id:1731342505208,\r\nstudentId:1730898187668,examId:1730804311728,score:76,fullScore:100,timeSpend:160,id:1731342505209,\r\nstudentId:1730898187668,examId:1730804311732,score:78,fullScore:100,timeSpend:80,id:1731342505211,\r\nstudentId:1731398655575,examId:1730804311733,score:88,fullScore:100,timeSpend:150,id:1731342505212,\r\nstudentId:1731398655575,examId:1730804311734,score:90,fullScore:100,timeSpend:160,id:1731342505213,\r\nstudentId:1731403683247,examId:1730804311735,score:92,fullScore:100,timeSpend:140,id:1731342505214,\r\nstudentId:1731403683247,examId:1730804311736,score:85,fullScore:100,timeSpend:150,id:1731342505215,\r\nstudentId:1730897297061,examId:1730804311737,score:95,fullScore:100,timeSpend:120,id:1731342505216,\r\nstudentId:1730897297061,examId:1730804311738,score:89,fullScore:100,timeSpend:130,id:1731342505217,\r\nstudentId:1731522446359,examId:1730804311727,score:45,fullScore:55,timeSpend:00,id:1731834186609,\r\nstudentId:1731522446359,examId:1730804311728,score:45,fullScore:55,timeSpend:Less than a minute,id:1731834713166,\r\nstudentId:1731522446359,examId:1730804311736,score:30,fullScore:30,timeSpend:Less than a minute,id:1731834816491,\r\nstudentId:1731522446359,examId:1730804311735,score:10,fullScore:20,timeSpend:Less than a minute,id:1731836718684,\r\nstudentId:1731836978118,examId:1730804311735,score:10,fullScore:20,timeSpend:Less than a minute,id:1731837041099,\r\nstudentId:1731836978118,examId:1730804311736,score:30,fullScore:30,timeSpend:Less than a minute,id:1731837073432,\r\nstudentId:1731836978118,examId:1730804311727,score:45,fullScore:55,timeSpend:Less than a minute,id:1731837119889,\r\nstudentId:1731838519141,examId:1730804311727,score:45,fullScore:55,timeSpend:Less than a minute,id:1731839003265,\r\nstudentId:1731838519141,examId:1730804311728,score:45,fullScore:55,timeSpend:Less than a minute,id:1731839025971,\r\nstudentId:1731838519141,examId:1730804311734,score:0,fullScore:10,timeSpend:Less than a minute,id:1731860367798,\r\nstudentId:1731838519141,examId:1730804311735,score:10,fullScore:20,timeSpend:1.0,id:1732009243093,\r\nstudentId:1732207198067,examId:1730804311727,score:0,fullScore:55,timeSpend:1,id:1732207734064,\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/database/grade.txt b/target/classes/database/grade.txt
--- a/target/classes/database/grade.txt	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/target/classes/database/grade.txt	(date 1732294161158)
@@ -22,4 +22,13 @@
 studentId:1731838519141,examId:1730804311728,score:45,fullScore:55,timeSpend:Less than a minute,id:1731839025971,
 studentId:1731838519141,examId:1730804311734,score:0,fullScore:10,timeSpend:Less than a minute,id:1731860367798,
 studentId:1731838519141,examId:1730804311735,score:10,fullScore:20,timeSpend:1.0,id:1732009243093,
-studentId:1732207198067,examId:1730804311727,score:0,fullScore:55,timeSpend:1,id:1732207734064,
+studentId:1732293391692,examId:1730804311727,score:45,fullScore:55,timeSpend:0,id:1732293450103,
+studentId:1732293391692,examId:1730804311728,score:0,fullScore:55,timeSpend:0,id:1732293466988,
+studentId:1732293391692,examId:1730804311737,score:20,fullScore:20,timeSpend:0,id:1732293484337,
+studentId:1732293391692,examId:1730804311734,score:0,fullScore:10,timeSpend:0,id:1732293557859,
+studentId:1732293391692,examId:1730804311735,score:10,fullScore:20,timeSpend:0,id:1732293606806,
+studentId:1732293391692,examId:1730804311736,score:10,fullScore:30,timeSpend:0,id:1732293780016,
+studentId:1732293959301,examId:1730804311727,score:45,fullScore:55,timeSpend:0,id:1732294052329,
+studentId:1732293959301,examId:1730804311728,score:0,fullScore:55,timeSpend:0,id:1732294065122,
+studentId:1732293959301,examId:1730804311737,score:20,fullScore:20,timeSpend:0,id:1732294097745,
+studentId:1732293959301,examId:1730804311734,score:10,fullScore:10,timeSpend:0,id:1732294161156,
Index: target/classes/database/student.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>username:TomUsername,name:Tom Brown,age:23,gender:Male,department:English,password:test123,id:1730897326628,\r\nusername:LilyUsername,name:Lily Adams,age:20,gender:Female,department:Physics,password:test123,id:1730898187668,\r\nusername:AlexUsername,name:Alex Johnson,age:22,gender:Male,department:Computer Science,password:test123,id:1730897297061,\r\nusername:TestIsername1,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731398655575,\r\nusername:Test,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403683247,\r\nusername:Test2,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403799869,\r\nusername:Test3,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403876068,\r\nusername:123,name:123,age:123,gender:Male,department:123,password:123,id:1732027519224,\r\nusername:12345678,name:hello,age:12,gender:Male,department:12,password:123456789,id:1732180399204,\r\nusername:helloworld,name:hello,age:12,gender:Female,department:12,password:12345678,id:1732180664697,\r\nusername:clyde,name:clyde,age:12,gender:Male,department:12,password:qwertyuiop,id:1732207198067,\r\nusername:12345,name:123,age:12,gender:Male,department:12,password:12345678,id:1732207266141,\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/database/student.txt b/target/classes/database/student.txt
--- a/target/classes/database/student.txt	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/target/classes/database/student.txt	(date 1732293959302)
@@ -5,8 +5,5 @@
 username:Test,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403683247,
 username:Test2,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403799869,
 username:Test3,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403876068,
-username:123,name:123,age:123,gender:Male,department:123,password:123,id:1732027519224,
-username:12345678,name:hello,age:12,gender:Male,department:12,password:123456789,id:1732180399204,
-username:helloworld,name:hello,age:12,gender:Female,department:12,password:12345678,id:1732180664697,
-username:clyde,name:clyde,age:12,gender:Male,department:12,password:qwertyuiop,id:1732207198067,
-username:12345,name:123,age:12,gender:Male,department:12,password:12345678,id:1732207266141,
+username:clyde,name:c,age:12,gender:Male,department:12,password:qwertyuiop,id:1732293391692,
+username:12345,name:123,age:12,gender:Male,department:12,password:12345678,id:1732293959301,
Index: src/main/resources/database/grade.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>studentId:1730897297061,examId:1730804311727,score:88,fullScore:100,timeSpend:150,id:1731342505202,\r\nstudentId:1730897297061,examId:1730804311728,score:90,fullScore:100,timeSpend:170,id:1731342505203,\r\nstudentId:1730897326628,examId:1730804311727,score:92,fullScore:100,timeSpend:160,id:1731342505204,\r\nstudentId:1730897326628,examId:1730804311728,score:95,fullScore:100,timeSpend:180,id:1731342505205,\r\nstudentId:1730898187668,examId:1730804311727,score:85,fullScore:100,timeSpend:140,id:1731342505208,\r\nstudentId:1730898187668,examId:1730804311728,score:76,fullScore:100,timeSpend:160,id:1731342505209,\r\nstudentId:1730898187668,examId:1730804311732,score:78,fullScore:100,timeSpend:80,id:1731342505211,\r\nstudentId:1731398655575,examId:1730804311733,score:88,fullScore:100,timeSpend:150,id:1731342505212,\r\nstudentId:1731398655575,examId:1730804311734,score:90,fullScore:100,timeSpend:160,id:1731342505213,\r\nstudentId:1731403683247,examId:1730804311735,score:92,fullScore:100,timeSpend:140,id:1731342505214,\r\nstudentId:1731403683247,examId:1730804311736,score:85,fullScore:100,timeSpend:150,id:1731342505215,\r\nstudentId:1730897297061,examId:1730804311737,score:95,fullScore:100,timeSpend:120,id:1731342505216,\r\nstudentId:1730897297061,examId:1730804311738,score:89,fullScore:100,timeSpend:130,id:1731342505217,\r\nstudentId:1731522446359,examId:1730804311727,score:45,fullScore:55,timeSpend:00,id:1731834186609,\r\nstudentId:1731522446359,examId:1730804311728,score:45,fullScore:55,timeSpend:Less than a minute,id:1731834713166,\r\nstudentId:1731522446359,examId:1730804311736,score:30,fullScore:30,timeSpend:Less than a minute,id:1731834816491,\r\nstudentId:1731522446359,examId:1730804311735,score:10,fullScore:20,timeSpend:Less than a minute,id:1731836718684,\r\nstudentId:1731836978118,examId:1730804311735,score:10,fullScore:20,timeSpend:Less than a minute,id:1731837041099,\r\nstudentId:1731836978118,examId:1730804311736,score:30,fullScore:30,timeSpend:Less than a minute,id:1731837073432,\r\nstudentId:1731836978118,examId:1730804311727,score:45,fullScore:55,timeSpend:Less than a minute,id:1731837119889,\r\nstudentId:1731838519141,examId:1730804311727,score:45,fullScore:55,timeSpend:Less than a minute,id:1731839003265,\r\nstudentId:1731838519141,examId:1730804311728,score:45,fullScore:55,timeSpend:Less than a minute,id:1731839025971,\r\nstudentId:1731838519141,examId:1730804311734,score:0,fullScore:10,timeSpend:Less than a minute,id:1731860367798,\r\nstudentId:1731838519141,examId:1730804311735,score:10,fullScore:20,timeSpend:1.0,id:1732009243093,\r\nstudentId:1732207198067,examId:1730804311727,score:0,fullScore:55,timeSpend:1,id:1732207734064,\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/database/grade.txt b/src/main/resources/database/grade.txt
--- a/src/main/resources/database/grade.txt	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/src/main/resources/database/grade.txt	(date 1732294375767)
@@ -22,4 +22,6 @@
 studentId:1731838519141,examId:1730804311728,score:45,fullScore:55,timeSpend:Less than a minute,id:1731839025971,
 studentId:1731838519141,examId:1730804311734,score:0,fullScore:10,timeSpend:Less than a minute,id:1731860367798,
 studentId:1731838519141,examId:1730804311735,score:10,fullScore:20,timeSpend:1.0,id:1732009243093,
-studentId:1732207198067,examId:1730804311727,score:0,fullScore:55,timeSpend:1,id:1732207734064,
+studentId:1732294296683,examId:1730804311727,score:45,fullScore:55,timeSpend:0,id:1732294348276,
+studentId:1732294296683,examId:1730804311728,score:0,fullScore:55,timeSpend:0,id:1732294358471,
+studentId:1732294296683,examId:1730804311734,score:0,fullScore:10,timeSpend:0,id:1732294375766,
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"05fcd762-c733-409b-9bd6-2bf37a1d5f58\" name=\"Changes\" comment=\"changes to some student register service\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentExamController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentExamController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentMainController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentMainController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentRegisterController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentRegisterController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/comp3111/examsystem/StudentGradeStatisticsUI.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/comp3111/examsystem/StudentGradeStatisticsUI.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/database/courseregrecord.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/database/courseregrecord.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/database/student.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/database/student.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/StudentGradeStatisticsUI.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/StudentGradeStatisticsUI.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentExamController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentExamController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentGradeStatisticsController$gradeStatistics.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentGradeStatisticsController$gradeStatistics.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentGradeStatisticsController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentGradeStatisticsController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentLoginController$SessionManager.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentLoginController$SessionManager.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentLoginController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentLoginController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentMainController$ExamAndQuestionData.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentMainController$ExamAndQuestionData.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentMainController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentMainController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentRegisterController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentRegisterController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/database/courseregrecord.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/database/courseregrecord.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/database/student.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/database/student.txt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/..\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"Student-services\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"comp3111.examsystem.Main\" />\r\n      <module name=\"ExamSystem\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"comp3111.examsystem.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"Extracted service functions from student register controller\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732173640558</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732173640558</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Extracted service functions from student main controller\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732179540490</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732179540490</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Extracted service functions from student main controller - revised\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732180808783</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732180808783</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"changes to some student register service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732193722398</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732193722398</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Feat: Added one gen\" />\r\n    <MESSAGE value=\"git commit\" />\r\n    <MESSAGE value=\"Extracted service functions from student register controller\" />\r\n    <MESSAGE value=\"Added comments to functions in the rest of the student controllers.\" />\r\n    <MESSAGE value=\"Extracted service functions from student main controller\" />\r\n    <MESSAGE value=\"Extracted service functions from student main controller - revised\" />\r\n    <MESSAGE value=\"changes to some student register service\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"changes to some student register service\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$entity_in_ExamSystem.ic\" NAME=\"entity in ExamSystem Coverage Results\" MODIFIED=\"1731772544495\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\" />\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$ManagerTeacherManagementControllerTest.ic\" NAME=\"ManagerTeacherManagementControllerTest Coverage Results\" MODIFIED=\"1731592067755\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.controller.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$CourseRegRecordTest.ic\" NAME=\"CourseRegRecordTest Coverage Results\" MODIFIED=\"1732108609349\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$ExamTest.ic\" NAME=\"ExamTest Coverage Results\" MODIFIED=\"1732108634366\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$RecordTest.ic\" NAME=\"RecordTest Coverage Results\" MODIFIED=\"1732109575938\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$ManagerTest.ic\" NAME=\"ManagerTest Coverage Results\" MODIFIED=\"1732108650162\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$EntityTest.ic\" NAME=\"EntityTest Coverage Results\" MODIFIED=\"1732108628620\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$CourseTest.ic\" NAME=\"CourseTest Coverage Results\" MODIFIED=\"1732108622226\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$StudentTest.ic\" NAME=\"StudentTest Coverage Results\" MODIFIED=\"1732108670572\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$ManagerTest_testAuthenticate_Fail_Password.ic\" NAME=\"ManagerTest.testAuthenticate_Fail_Password Coverage Results\" MODIFIED=\"1731234603327\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$GradeTest_testGetStudentName.ic\" NAME=\"GradeTest.testGetStudentName Coverage Results\" MODIFIED=\"1731766797493\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$ManagerLoginControllerTest.ic\" NAME=\"ManagerLoginControllerTest Coverage Results\" MODIFIED=\"1731245390727\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.controller.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$ManagerTest_testAuthenticate_Fail_Username.ic\" NAME=\"ManagerTest.testAuthenticate_Fail_Username Coverage Results\" MODIFIED=\"1731234597776\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$ManagerTest_testAuthenticate_Success.ic\" NAME=\"ManagerTest.testAuthenticate_Success Coverage Results\" MODIFIED=\"1731234565062\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$QuestionTest.ic\" NAME=\"QuestionTest Coverage Results\" MODIFIED=\"1732110737867\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$TeacherTest.ic\" NAME=\"TeacherTest Coverage Results\" MODIFIED=\"1732108677826\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$comp3111_examsystem_entity_in_ExamSystem.ic\" NAME=\"comp3111.examsystem.entity in ExamSystem Coverage Results\" MODIFIED=\"1731753765660\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ExamSystemSkeleton$GradeTest.ic\" NAME=\"GradeTest Coverage Results\" MODIFIED=\"1732108643807\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>comp3111.examsystem.entity.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/.idea/workspace.xml	(date 1732345417308)
@@ -4,25 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="05fcd762-c733-409b-9bd6-2bf37a1d5f58" name="Changes" comment="changes to some student register service">
+    <list default="true" id="05fcd762-c733-409b-9bd6-2bf37a1d5f58" name="Changes" comment="Fixed minor bugs for Task1">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentExamController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentExamController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentGradeStatisticsController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentMainController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentMainController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentRegisterController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/comp3111/examsystem/controller/StudentRegisterController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/comp3111/examsystem/StudentGradeStatisticsUI.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/comp3111/examsystem/StudentGradeStatisticsUI.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/database/courseregrecord.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/database/courseregrecord.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/database/grade.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/database/grade.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/database/student.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/database/student.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/StudentGradeStatisticsUI.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/StudentGradeStatisticsUI.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentExamController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentExamController.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentGradeStatisticsController$gradeStatistics.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentGradeStatisticsController$gradeStatistics.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentGradeStatisticsController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentGradeStatisticsController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentLoginController$SessionManager.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentLoginController$SessionManager.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentLoginController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentLoginController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentMainController$ExamAndQuestionData.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentMainController$ExamAndQuestionData.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentMainController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentMainController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentRegisterController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/comp3111/examsystem/controller/StudentRegisterController.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/database/courseregrecord.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/database/courseregrecord.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/database/grade.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/database/grade.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/database/student.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/database/student.txt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -36,6 +29,9 @@
         <option value="Class" />
       </list>
     </option>
+  </component>
+  <component name="Git.Rebase.Settings">
+    <option name="NEW_BASE" value="main" />
   </component>
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
@@ -45,13 +41,39 @@
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.Main.executor": "Run",
-    "git-widget-placeholder": "Student-services",
-    "node.js.selected.package.tslint": "(autodetect)"
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;clydelee25&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/Seankor20/COMP3111_Project.git&quot;,
+    &quot;accountId&quot;: &quot;b9a4ac08-1644-4e5b-b699-1946e68ffa46&quot;
+  }
+}</component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 3
+}</component>
+  <component name="ProjectId" id="2pDF50ojXqjiANzsKSCZVAckAyl" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;Student-services&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="comp3111.examsystem.Main" />
@@ -72,6 +94,15 @@
       </list>
     </recent_temporary>
   </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.21829.142" />
+        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-IU-242.21829.142" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task id="LOCAL-00001" summary="Extracted service functions from student register controller">
       <option name="closed" value="true" />
@@ -105,9 +136,29 @@
       <option name="project" value="LOCAL" />
       <updated>1732193722398</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="Fixed minor bugs for Task1">
+      <option name="closed" value="true" />
+      <created>1732207804602</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1732207804602</updated>
+    </task>
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="05fcd762-c733-409b-9bd6-2bf37a1d5f58" name="Changes" comment="Fixed minor bugs for Task1" />
+      <created>1732292557173</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1732292557173</updated>
+      <workItem from="1732292558795" duration="2257000" />
+      <workItem from="1732342431282" duration="1029000" />
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Feat: Added one gen" />
     <MESSAGE value="git commit" />
@@ -116,7 +167,8 @@
     <MESSAGE value="Extracted service functions from student main controller" />
     <MESSAGE value="Extracted service functions from student main controller - revised" />
     <MESSAGE value="changes to some student register service" />
-    <option name="LAST_COMMIT_MESSAGE" value="changes to some student register service" />
+    <MESSAGE value="Fixed minor bugs for Task1" />
+    <option name="LAST_COMMIT_MESSAGE" value="Fixed minor bugs for Task1" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/ExamSystemSkeleton$entity_in_ExamSystem.ic" NAME="entity in ExamSystem Coverage Results" MODIFIED="1731772544495" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
Index: target/classes/database/courseregrecord.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>studentKey:1730897297061,courseKey:1730804322907,id:1731342505172,\r\nstudentKey:1730897326628,courseKey:1730804322906,id:1731342505173,\r\nstudentKey:1730898187668,courseKey:1730804322905,id:1731342505174,\r\nstudentKey:1730897297061,courseKey:1730804322906,id:1731342505175,\r\nstudentKey:1730897326628,courseKey:1730804322907,id:1731342505176,\r\nstudentKey:1730898187668,courseKey:1730804322901,id:1731342505177,\r\nstudentKey:1731398655575,courseKey:1730804322902,id:1731342505178,\r\nstudentKey:1731403683247,courseKey:1730804322903,id:1731342505179,\r\nstudentKey:1730897326628,courseKey:1730804322904,id:1731342505180,\r\nstudentKey:1730897297061,courseKey:1730804322908,id:1731342505181,\r\nstudentKey:1731522446359,courseKey:1730804322907,id:1731574601036,\r\nstudentKey:1731522446359,courseKey:1730804322906,id:1731574605786,\r\nstudentKey:1731522446359,courseKey:1730804322905,id:1731574608403,\r\nstudentKey:1731522446359,courseKey:1730804322903,id:1731574611345,\r\nstudentKey:1731522446359,courseKey:1730804322904,id:1731574613832,\r\nstudentKey:1731836978118,courseKey:1730804322908,id:1731837012862,\r\nstudentKey:1731836978118,courseKey:1730804322907,id:1731837015210,\r\nstudentKey:1731836978118,courseKey:1730804322905,id:1731837017872,\r\nstudentKey:1731836978118,courseKey:1730804322904,id:1731837020526,\r\nstudentKey:1731836978118,courseKey:1730804322903,id:1731837022900,\r\nstudentKey:1731836978118,courseKey:1730804322902,id:1731837025382,\r\nstudentKey:1731838519141,courseKey:1730804322908,id:1731838549602,\r\nstudentKey:1731838519141,courseKey:1730804322906,id:1731838552203,\r\nstudentKey:1731838519141,courseKey:1730804322907,id:1731838554652,\r\nstudentKey:1731838519141,courseKey:1730804322905,id:1731838557236,\r\nstudentKey:1731838519141,courseKey:1730804322904,id:1731838562463,\r\nstudentKey:1731838519141,courseKey:1730804322903,id:1731838564768,\r\nstudentKey:1731838519141,courseKey:1730804322902,id:1731838567437,\r\nstudentKey:1731838519141,courseKey:1730804322901,id:1731838570157,\r\nstudentKey:1732207198067,courseKey:1730804322907,id:1732207309566,\r\nstudentKey:1732207198067,courseKey:1730804322902,id:1732207325940,\r\nstudentKey:1732207198067,courseKey:1730804322908,id:1732207329225,\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/database/courseregrecord.txt b/target/classes/database/courseregrecord.txt
--- a/target/classes/database/courseregrecord.txt	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/target/classes/database/courseregrecord.txt	(date 1732294134386)
@@ -27,6 +27,17 @@
 studentKey:1731838519141,courseKey:1730804322903,id:1731838564768,
 studentKey:1731838519141,courseKey:1730804322902,id:1731838567437,
 studentKey:1731838519141,courseKey:1730804322901,id:1731838570157,
-studentKey:1732207198067,courseKey:1730804322907,id:1732207309566,
-studentKey:1732207198067,courseKey:1730804322902,id:1732207325940,
-studentKey:1732207198067,courseKey:1730804322908,id:1732207329225,
+studentKey:1732293391692,courseKey:1730804322908,id:1732293413423,
+studentKey:1732293391692,courseKey:1730804322907,id:1732293416386,
+studentKey:1732293391692,courseKey:1730804322903,id:1732293420858,
+studentKey:1732293391692,courseKey:1730804322902,id:1732293514111,
+studentKey:1732293391692,courseKey:1730804322906,id:1732293516882,
+studentKey:1732293391692,courseKey:1730804322905,id:1732293519296,
+studentKey:1732293391692,courseKey:1730804322904,id:1732293569451,
+studentKey:1732293391692,courseKey:1730804322901,id:1732293572443,
+studentKey:1732293959301,courseKey:1730804322908,id:1732293976328,
+studentKey:1732293959301,courseKey:1730804322907,id:1732293978258,
+studentKey:1732293959301,courseKey:1730804322906,id:1732293981608,
+studentKey:1732293959301,courseKey:1730804322905,id:1732294027070,
+studentKey:1732293959301,courseKey:1730804322904,id:1732294029543,
+studentKey:1732293959301,courseKey:1730804322902,id:1732294134384,
Index: src/main/resources/database/student.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>username:TomUsername,name:Tom Brown,age:23,gender:Male,department:English,password:test123,id:1730897326628,\r\nusername:LilyUsername,name:Lily Adams,age:20,gender:Female,department:Physics,password:test123,id:1730898187668,\r\nusername:AlexUsername,name:Alex Johnson,age:22,gender:Male,department:Computer Science,password:test123,id:1730897297061,\r\nusername:TestIsername1,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731398655575,\r\nusername:Test,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403683247,\r\nusername:Test2,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403799869,\r\nusername:Test3,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403876068,\r\nusername:123,name:123,age:123,gender:Male,department:123,password:123,id:1732027519224,\r\nusername:12345678,name:hello,age:12,gender:Male,department:12,password:123456789,id:1732180399204,\r\nusername:helloworld,name:hello,age:12,gender:Female,department:12,password:12345678,id:1732180664697,\r\nusername:clyde,name:clyde,age:12,gender:Male,department:12,password:qwertyuiop,id:1732207198067,\r\nusername:12345,name:123,age:12,gender:Male,department:12,password:12345678,id:1732207266141,\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/database/student.txt b/src/main/resources/database/student.txt
--- a/src/main/resources/database/student.txt	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/src/main/resources/database/student.txt	(date 1732294296684)
@@ -5,8 +5,4 @@
 username:Test,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403683247,
 username:Test2,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403799869,
 username:Test3,name:TestName1,age:22,gender:Non-Binary,department:Computer Science,password:test123,id:1731403876068,
-username:123,name:123,age:123,gender:Male,department:123,password:123,id:1732027519224,
-username:12345678,name:hello,age:12,gender:Male,department:12,password:123456789,id:1732180399204,
-username:helloworld,name:hello,age:12,gender:Female,department:12,password:12345678,id:1732180664697,
-username:clyde,name:clyde,age:12,gender:Male,department:12,password:qwertyuiop,id:1732207198067,
-username:12345,name:123,age:12,gender:Male,department:12,password:12345678,id:1732207266141,
+username:clyde,name:c,age:12,gender:Male,department:12,password:qwertyuiop,id:1732294296683,
Index: src/main/resources/database/courseregrecord.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>studentKey:1730897297061,courseKey:1730804322907,id:1731342505172,\r\nstudentKey:1730897326628,courseKey:1730804322906,id:1731342505173,\r\nstudentKey:1730898187668,courseKey:1730804322905,id:1731342505174,\r\nstudentKey:1730897297061,courseKey:1730804322906,id:1731342505175,\r\nstudentKey:1730897326628,courseKey:1730804322907,id:1731342505176,\r\nstudentKey:1730898187668,courseKey:1730804322901,id:1731342505177,\r\nstudentKey:1731398655575,courseKey:1730804322902,id:1731342505178,\r\nstudentKey:1731403683247,courseKey:1730804322903,id:1731342505179,\r\nstudentKey:1730897326628,courseKey:1730804322904,id:1731342505180,\r\nstudentKey:1730897297061,courseKey:1730804322908,id:1731342505181,\r\nstudentKey:1731522446359,courseKey:1730804322907,id:1731574601036,\r\nstudentKey:1731522446359,courseKey:1730804322906,id:1731574605786,\r\nstudentKey:1731522446359,courseKey:1730804322905,id:1731574608403,\r\nstudentKey:1731522446359,courseKey:1730804322903,id:1731574611345,\r\nstudentKey:1731522446359,courseKey:1730804322904,id:1731574613832,\r\nstudentKey:1731836978118,courseKey:1730804322908,id:1731837012862,\r\nstudentKey:1731836978118,courseKey:1730804322907,id:1731837015210,\r\nstudentKey:1731836978118,courseKey:1730804322905,id:1731837017872,\r\nstudentKey:1731836978118,courseKey:1730804322904,id:1731837020526,\r\nstudentKey:1731836978118,courseKey:1730804322903,id:1731837022900,\r\nstudentKey:1731836978118,courseKey:1730804322902,id:1731837025382,\r\nstudentKey:1731838519141,courseKey:1730804322908,id:1731838549602,\r\nstudentKey:1731838519141,courseKey:1730804322906,id:1731838552203,\r\nstudentKey:1731838519141,courseKey:1730804322907,id:1731838554652,\r\nstudentKey:1731838519141,courseKey:1730804322905,id:1731838557236,\r\nstudentKey:1731838519141,courseKey:1730804322904,id:1731838562463,\r\nstudentKey:1731838519141,courseKey:1730804322903,id:1731838564768,\r\nstudentKey:1731838519141,courseKey:1730804322902,id:1731838567437,\r\nstudentKey:1731838519141,courseKey:1730804322901,id:1731838570157,\r\nstudentKey:1732207198067,courseKey:1730804322907,id:1732207309566,\r\nstudentKey:1732207198067,courseKey:1730804322902,id:1732207325940,\r\nstudentKey:1732207198067,courseKey:1730804322908,id:1732207329225,\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/database/courseregrecord.txt b/src/main/resources/database/courseregrecord.txt
--- a/src/main/resources/database/courseregrecord.txt	(revision 65c52864742812b96affe52b5de5eadbfe730b04)
+++ b/src/main/resources/database/courseregrecord.txt	(date 1732294320676)
@@ -27,6 +27,6 @@
 studentKey:1731838519141,courseKey:1730804322903,id:1731838564768,
 studentKey:1731838519141,courseKey:1730804322902,id:1731838567437,
 studentKey:1731838519141,courseKey:1730804322901,id:1731838570157,
-studentKey:1732207198067,courseKey:1730804322907,id:1732207309566,
-studentKey:1732207198067,courseKey:1730804322902,id:1732207325940,
-studentKey:1732207198067,courseKey:1730804322908,id:1732207329225,
+studentKey:1732294296683,courseKey:1730804322908,id:1732294315805,
+studentKey:1732294296683,courseKey:1730804322907,id:1732294317737,
+studentKey:1732294296683,courseKey:1730804322902,id:1732294320675,
